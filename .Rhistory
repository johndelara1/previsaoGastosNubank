library(catboost)
install.packages("catboost")
install.packages('devtools')
devtools::install_url('BINARY_URL'[, INSTALL_opts|args = c("--no-multiarch")])
devtools::install_url('BINARY_URL'[, INSTALL_opts|args = c("--no-multiarch")])
devtools::install_url('BINARY_URL'[, INSTALL_opts|args = c("--no-multiarch")])
devtools::install_url('https://github.com/catboost/catboost/releases/download/v0.6.1.1/catboost-R-Windows-0.6.1.1.tgz', args = c("--no-multiarch"))
library(catboost)
library(devtools)
install.packages('devtools')
devtools::install_url('https://github.com/catboost/catboost/releases/download/v0.6.1.1/catboost-R-Windows-0.6.1.1.tgz', args = c("--no-multiarch"))
devtools::install_github('catboost/catboost', subdir = 'catboost/R-package')
devtools
library(devtools)
library(devtools)
library('devtools')
install.packages(c('devtools','curl'))
library('devtools')
install.packages(c('devtools','curl'))
library('devtools')
library('devtools')
install.packages(c('devtools','curl'))
library('devtools')
devtools::install_github('catboost/catboost', subdir = 'catboost/R-package')
install.packages('devtools')
install.packages('xml2')
devtools::install_github('catboost/catboost', subdir = 'catboost/R-package')
install.packages('xml2')
install.packages('devtools')
devtools::install_github('catboost/catboost', subdir = 'catboost/R-package')
library(catboost)
features <- data.frame(feature1 = c(1, 2, 3), feature2 = c('A', 'B', 'C'))
labels <- c(0, 0, 1)
train_pool <- catboost.load_pool(data = features, label = labels)
View(features)
model <- catboost.train(train_pool,  NULL,
params = list(loss_function = 'Logloss',
iterations = 100, metric_period=10))
real_data <- data.frame(feature1 = c(2, 1, 3), feature2 = c('D', 'B', 'C'))
real_pool <- catboost.load_pool(real_data)
prediction <- catboost.predict(model, real_pool)
print(prediction)
Sys.info()
install.packages("plotly")
setwd("~/Desktop/exercicios")
# Exercicio 1 - Encontre e faça a correção do erro na instrução abaixo:
write.table(mtcars, file = "mtcars2.txt", sep = "|", col.names = N, qmethod = "double")
# Exercicio 1 - Encontre e faça a correção do erro na instrução abaixo:
write.table(mtcars, file = "mtcars2.txt", sep = "|", col.names = N, qmethod = "double")
getwd()
setwd("~/Desktop/2-Arquivos-Cap05")
# Obs: Se você tentar calcular a média de apenas uma disciplina, assim,
# vai receber uma mensagem de erro:
apply(escola$Matemática,2,mean)
vec1 <- (10:13)
vec2 <- c("a", "b", "c", "d")
myfunc <- function(x, y){
df = data.frame(cbind(x, y))
print(df)
}
myfunc(vec1, vec2)
# Exercicio 2 - Crie uma matriz com 4 linhas e 4 colunas preenchida com
# números inteiros e calcule a média de cada linha
mat <- matrix(c(1:16), nrow = 4, ncol = 4)
mat
apply(mat, 1, mean)
# Exercicio 3 - Considere o dataframe abaixo.
# Calcule a média por disciplina e depois calcule a média de apenas uma disciplina
escola <- data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Aline', 'Alex', 'Ajay'),
Matematica = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67),
Quimica = c(76, 56, 89, 90, 100, 87))
escola
apply(escola[, c(2, 3, 4)], 2, mean)
# Obs: Se você tentar calcular a média de apenas uma disciplina, assim,
# vai receber uma mensagem de erro:
apply(escola$Matemática,2,mean)
# Isso acontece porque o interpretador do R tenta usar um vetor de qualquer dimensão,
# enquanto apply espera que o objeto tenha algumas dimensões.
# Você pode evitar a coerção, adicionando drop = F ao seu comando, ou seja:
apply(escola[, c(2), drop=F], 2, mean)
# Exercício 9 - Qual o erro do código abaixo?
# Troubleshooting
data(diamonds)
# Solução Lista de Exercícios - Capítulo 4
# Obs: Caso tenha problemas com a acentuação, consulte este link:
# https://support.rstudio.com/hc/en-us/articles/200532197-Character-Encoding
# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
# Não use diretórios com espaço no nome
setwd("C:/FCD/BigDataRAzure/Cap05")
getwd()
# Exercicio 1 - Crie uma função que receba os dois vetores abaixo como parâmetro,
# converta-os em um dataframe e imprima no console
vec1 <- (10:13)
vec2 <- c("a", "b", "c", "d")
myfunc <- function(x, y){
df = data.frame(cbind(x, y))
print(df)
}
myfunc(vec1, vec2)
# Exercicio 2 - Crie uma matriz com 4 linhas e 4 colunas preenchida com
# números inteiros e calcule a média de cada linha
mat <- matrix(c(1:16), nrow = 4, ncol = 4)
mat
apply(mat, 1, mean)
# Exercicio 3 - Considere o dataframe abaixo.
# Calcule a média por disciplina e depois calcule a média de apenas uma disciplina
escola <- data.frame(Aluno = c('Alan', 'Alice', 'Alana', 'Aline', 'Alex', 'Ajay'),
Matematica = c(90, 80, 85, 87, 56, 79),
Geografia = c(100, 78, 86, 90, 98, 67),
Quimica = c(76, 56, 89, 90, 100, 87))
escola
apply(escola[, c(2, 3, 4)], 2, mean)
# Obs: Se você tentar calcular a média de apenas uma disciplina, assim,
# vai receber uma mensagem de erro:
apply(escola$Matemática,2,mean)
# Isso acontece porque o interpretador do R tenta usar um vetor de qualquer dimensão,
# enquanto apply espera que o objeto tenha algumas dimensões.
# Você pode evitar a coerção, adicionando drop = F ao seu comando, ou seja:
apply(escola[, c(2), drop=F], 2, mean)
# Exercicio 4 - Crie uma lista com 3 elementos, todos numéricos
# e calcule a soma de todos os elementos da lista
lst <- list(a = 1:10, b = 1:5)
lst
do.call(sum, lst)
# Exercicio 5 - Transforme a lista anterior em um vetor
unlist(lst)
# Exercicio 6 - Considere a string abaixo. Substitua a palavra "textos" por "frases"
str <- c("Expressoes", "regulares", "em linguagem R",
"permitem a busca de padroes", "e exploracao de textos",
"podemos buscar padroes em digitos",
"como por exemplo",
"10992451280")
gsub("textos", "frases", str)
# Exercicio 7 - Usando o dataset mtcars, crie um grafico com ggplot do tipo
# scatter plot. Use as colunas disp e mpg nos eixos x e y respectivamente
library(ggplot2)
ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()
# Exercicio 8 - Considere a matriz abaixo.
# Crie um bar plot que represente os dados em barras individuais.
mat1 <- matrix(c(652,1537,598,242,36,46,38,21,218,327,106,67), nrow = 3, byrow = T)
mat1
barplot(mat1, beside = T)
barplot(mat1)
# Exercício 9 - Qual o erro do código abaixo?
# Troubleshooting
data(diamonds)
View(diamonds)
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5)
# Exercício 10 - Qual o erro do código abaixo?
ggplot(mtcars, aes(x = as.factor(cyl), fill = as.factor(cyl))) +
geom_bar() +
labs(fill = "cyl")
# Exercício 9 - Qual o erro do código abaixo?
# Troubleshooting
data(diamonds)
View(diamonds)
ggplot(data = diamonds, aes(x = price, group = cut, fill = cut)) +
geom_density(adjust = 1.5)
# Exercício 10 - Qual o erro do código abaixo?
ggplot(mtcars, aes(x = as.factor(cyl), fill = as.factor(cyl))) +
geom_bar() +
labs(fill = "cyl")
# Importando vários arquivos simultaneamente
list.files()
setwd("~/Desktop/nubank")
# Importando vários arquivos simultaneamente
list.files()
setwd("~/Desktop/nubank")
# Importando vários arquivos simultaneamente
list.files()
lista_arquivos <- list.files('~/Desktop/nubank', full.names = TRUE)
class(lista_arquivos)
lista_arquivos
lista_arquivos2 <- lapply(lista_arquivos, read_csv)
lista_arquivos
read_csv
library(readr)
lista_arquivos2 <- lapply(lista_arquivos, read_csv)
class(lista_arquivos2)
View(lista_arquivos2)
View(lista_arquivos2)
View(lista_arquivos2)
lista_arquivos2[1]
lista_arquivos2[2]
lista_arquivos2[10]
setwd("~/Desktop/estudos_r/2-Arquivos-Cap05")
# Manipulando arquivos csv
df_cad <- read_csv("cadastro.csv")
View(df_cad)
class(df_cad)
install.packages("dplyr")
library(dplyr)
library(dplyr)
options(warn=-1)
df_cad <- tbl_df(df_cad)
df_cad
head(df_cad)
View(df_cad)
lista_arquivos2
names(lista_arquivos2)
str(lista_arquivos2)
setwd("~/Desktop/nubank")
library(readr)
# Importando vários arquivos simultaneamente
list.files()
lista_arquivos <- list.files('~/Desktop/nubank', full.names = TRUE)
class(lista_arquivos)
lista_arquivos
lista_arquivos2 <- lapply(lista_arquivos, read_csv)
setwd("~/git/previsaoGastosNubank")
setwd("~/git/previsaoGastosNubank")
library(readr)
# Importando vários arquivos simultaneamente
list.files()
lista_arquivos <- list.files('~/git/previsaoGastosNubank/data")', full.names = TRUE)
class(lista_arquivos)
lista_arquivos
lista_arquivos2 <- lapply(lista_arquivos, read_csv)
class(lista_arquivos2)
View(lista_arquivos2)
lista_arquivos2
lista_arquivos <- list.files('~/git/previsaoGastosNubank/data")', full.names = TRUE)
lista_arquivos <- list.files('~/git/previsaoGastosNubank/data/")', full.names = TRUE)
class(lista_arquivos)
lista_arquivos
lista_arquivos2 <- lapply(lista_arquivos, read_csv)
lista_arquivos <- list.files('~/git/previsaoGastosNubank/data', full.names = TRUE)
setwd("~/git/previsaoGastosNubank")
library(readr)
# Importando vários arquivos simultaneamente
list.files()
lista_arquivos <- list.files('~/git/previsaoGastosNubank/data', full.names = TRUE)
class(lista_arquivos)
lista_arquivos
lista_arquivos2 <- lapply(lista_arquivos, read_csv)
class(lista_arquivos2)
View(lista_arquivos2)
lista_arquivos2
lista_arquivos2
View(lista_arquivos2)
lista_arquivos2[1]
length(lista_arquivos2)
lista_arquivos2[47]
lista_arquivos2[46]
setwd("~/git/previsaoGastosNubank")
library(readr)
source("codigos/carregar_varios_arquivos_csv_simultaneamente.R")
lista_arquivos2[46]
setwd("~/git/previsaoGastosNubank")
library(readr)
source("codigos/carregar_varios_arquivos_csv_simultaneamente.R")
lista_arquivos2[46]
lista_arquivos2[46]
setwd("~/git/previsaoGastosNubank")
library(readr)
source("codigos/carregar_varios_arquivos_csv_simultaneamente.R")
lista_arquivos2[47]
setwd("~/git/previsaoGastosNubank")
library(readr)
source("codigos/carregar_varios_arquivos_csv_simultaneamente.R")
lista_arquivos2[47]
print(lista_arquivos2[47])
gastos <-lista_arquivos2[47]
gastos <- as.data.frame(lista_arquivos2[47])
sum(gastos$amount)
gastos$amount
library(dplyr)
gastos %>% filter(amount > 0)
gastos %>% filter(amount > 0) %>% arrange(amount)
gastos %>% filter(amount > 0) %>% arrange(desc(amount))
gastos %>% filter(amount < 0) %>% arrange(desc(amount))
gastos %>% filter(amount < 0) %>% arrange((amount))
gastos %>% filter(amount > 0) %>% arrange(desc(amount))
